
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #########################
> ### Imports and setup ###
> #########################
> 
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ rsample      1.2.0
✔ dials        1.2.0     ✔ tune         1.1.2
✔ infer        1.0.5     ✔ workflows    1.1.3
✔ modeldata    1.2.0     ✔ workflowsets 1.0.1
✔ parsnip      1.1.1     ✔ yardstick    1.2.0
✔ recipes      1.0.8     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Search for functions across packages at https://www.tidymodels.org/find/
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> setwd('..')
> source('./scripts/utils.R')
> source('./scripts/feature_engineering.R')
> PARALLEL <- F
> FACTOR_CUTOFF <- 26
> 
> #########################
> ####### Load Data #######
> #########################
> 
> ## Load data
> data <- load_data(factor_cutoff=FACTOR_CUTOFF)
Rows: 61878 Columns: 95
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): target
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 144368 Columns: 94
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
[1] "Drop "
[1] "Changed column feat_5 to factor."
[1] "Changed column feat_6 to factor."
[1] "Changed column feat_10 to factor."
[1] "Changed column feat_12 to factor."
[1] "Changed column feat_21 to factor."
[1] "Changed column feat_22 to factor."
[1] "Changed column feat_23 to factor."
[1] "Changed column feat_28 to factor."
[1] "Changed column feat_33 to factor."
[1] "Changed column feat_37 to factor."
[1] "Changed column feat_44 to factor."
[1] "Changed column feat_51 to factor."
[1] "Changed column feat_55 to factor."
[1] "Changed column feat_61 to factor."
[1] "Changed column feat_65 to factor."
[1] "Changed column feat_77 to factor."
[1] "Changed column feat_79 to factor."
[1] "Changed column feat_81 to factor."
[1] "Changed column feat_82 to factor."
[1] "Changed column feat_92 to factor."
[1] "Changed column target to factor."
> train <- data$train
> test <- data$test
> 
> #########################
> ## Feature Engineering ##
> #########################
> 
> set.seed(2003)
> 
> ## parallel tune grid
> 
> if(PARALLEL){
+   cl <- makePSOCKcluster(6)
+   registerDoParallel(cl)
+ }
> 
> ## Set up preprocessing
> prepped_recipe <- setup_train_recipe(train, encode=T, poly=F, smote_K=0, pca_threshold=0)
Warning message:
Column(s) have zero variance so scaling cannot be used: `feat_5_new`, `feat_6_new`, `feat_10_new`, `feat_12_new`, `feat_21_new`, `feat_22_new`, `feat_23_new`, `feat_28_new`, `feat_33_new`, `feat_37_new`, `feat_44_new`, `feat_51_new`, `feat_55_new`, `feat_61_new`, `feat_65_new`, `feat_77_new`, `feat_79_new`, `feat_81_new`, `feat_82_new` and `feat_92_new`. Consider using `step_zv()` to remove those columns before normalizing 
> 
> ## Bake recipe
> bake(prepped_recipe, new_data=train)
# A tibble: 61,878 × 162
   feat_1 feat_2 feat_3  feat_4 feat_7 feat_8 feat_9 feat_11 feat_13 feat_14
    <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>
 1  0.402 -0.210 -0.307 -0.279  -0.188 -0.294 -0.291 -0.0831  -0.239  -0.536
 2 -0.254 -0.210 -0.307 -0.279  -0.188  0.150 -0.291 -0.412   -0.239  -0.536
 3 -0.254 -0.210 -0.307 -0.279  -0.188  0.150 -0.291 -0.412   -0.239  -0.536
 4  0.402 -0.210 -0.307  0.0792  4.67  -0.294 -0.291 -0.0831   0.258  -0.536
 5 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294 -0.291 -0.412   -0.239  -0.536
 6  1.06   0.589 -0.307 -0.279  -0.188 -0.294 -0.291 -0.412    0.754  -0.536
 7  1.06  -0.210 -0.307 -0.279  -0.188  0.593 -0.291 -0.412   -0.239  -0.536
 8 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294 -0.291 -0.412   -0.239  -0.536
 9 -0.254 -0.210 -0.307 -0.279  -0.188  1.48  -0.291 -0.412    3.24   -0.536
10 -0.254 -0.210 -0.307 -0.279   0.783 -0.294 -0.291 -0.412   -0.239  -0.536
# ℹ 61,868 more rows
# ℹ 152 more variables: feat_15 <dbl>, feat_16 <dbl>, feat_17 <dbl>,
#   feat_18 <dbl>, feat_19 <dbl>, feat_20 <dbl>, feat_24 <dbl>, feat_25 <dbl>,
#   feat_26 <dbl>, feat_27 <dbl>, feat_29 <dbl>, feat_30 <dbl>, feat_31 <dbl>,
#   feat_32 <dbl>, feat_34 <dbl>, feat_35 <dbl>, feat_36 <dbl>, feat_38 <dbl>,
#   feat_39 <dbl>, feat_40 <dbl>, feat_41 <dbl>, feat_42 <dbl>, feat_43 <dbl>,
#   feat_45 <dbl>, feat_46 <dbl>, feat_47 <dbl>, feat_48 <dbl>, …
> bake(prepped_recipe, new_data=test)
# A tibble: 144,368 × 161
   feat_1 feat_2 feat_3  feat_4 feat_7 feat_8 feat_9 feat_11 feat_13 feat_14
    <dbl>  <dbl>  <dbl>   <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>
 1 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294 -0.291  -0.412  -0.239  0.412 
 2  1.06   1.39   4.46   5.46   -0.188 -0.294 -0.291  -0.412  -0.239 -0.536 
 3 -0.254  0.589  3.78   0.0792 -0.188 -0.294 -0.291   1.89   -0.239 -0.536 
 4 -0.254 -0.210 -0.307  0.0792 -0.188 -0.294 -0.291  -0.412  -0.239 -0.536 
 5  0.402 -0.210 -0.307  0.0792  0.783  0.593 -0.291  -0.412  -0.239 -0.536 
 6 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294  4.60   -0.412  -0.239 -0.536 
 7 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294 -0.291  -0.412  -0.239 -0.220 
 8  1.06  -0.210 -0.307 -0.279  -0.188 -0.294 -0.291  -0.412  -0.239  0.0959
 9 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294 -0.291  -0.412  -0.239  0.0959
10 -0.254 -0.210 -0.307 -0.279  -0.188 -0.294  2.59   -0.412  -0.239 -0.536 
# ℹ 144,358 more rows
# ℹ 151 more variables: feat_15 <dbl>, feat_16 <dbl>, feat_17 <dbl>,
#   feat_18 <dbl>, feat_19 <dbl>, feat_20 <dbl>, feat_24 <dbl>, feat_25 <dbl>,
#   feat_26 <dbl>, feat_27 <dbl>, feat_29 <dbl>, feat_30 <dbl>, feat_31 <dbl>,
#   feat_32 <dbl>, feat_34 <dbl>, feat_35 <dbl>, feat_36 <dbl>, feat_38 <dbl>,
#   feat_39 <dbl>, feat_40 <dbl>, feat_41 <dbl>, feat_42 <dbl>, feat_43 <dbl>,
#   feat_45 <dbl>, feat_46 <dbl>, feat_47 <dbl>, feat_48 <dbl>, …
> 
> #########################
> ## Fit Classifier Model #
> #########################
> 
> ## Define model
> rf_model <- rand_forest(
+   mtry = tune(),
+   min_n = 15,
+   trees = 500
+ ) %>%
+   set_engine("ranger") %>%
+   set_mode("classification")
> 
> ## Define workflow
> rf_wf <- workflow(prepped_recipe) %>%
+   add_model(rf_model)
> 
> ## Grid of values to tune over
> tuning_grid <- grid_regular(
+   mtry(range=c(10,25)),#(range=c(4,ncol(train))),
+   levels = 4)
> 
> ## Split data for CV
> folds <- vfold_cv(train, v = 4, repeats=1)
> 
> ## Run the CV
> cv_results <- rf_wf %>%
+   tune_grid(resamples=folds,
+             grid=tuning_grid,
+             metrics=metric_set(mn_log_loss))
→ A | warning: Column(s) have zero variance so scaling cannot be used: `feat_5_new`, `feat_6_new`, `feat_10_new`, `feat_12_new`, `feat_21_new`, `feat_22_new`, `feat_23_new`, `feat_28_new`, `feat_33_new`, `feat_37_new`, `feat_44_new`, `feat_51_new`, `feat_55_new`, `feat_61_new`, `feat_65_new`, `feat_77_new`, `feat_79_new`, `feat_81_new`, `feat_82_new` and `feat_92_new`. Consider using `step_zv()` to remove those columns before normalizing
There were issues with some computations   A: x1
There were issues with some computations   A: x2
There were issues with some computations   A: x3
There were issues with some computations   A: x4
