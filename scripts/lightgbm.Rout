
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 2214049#########################
[1] 2214049
> ### Imports and setup ###
> #########################
> 
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ rsample      1.2.0
✔ dials        1.2.0     ✔ tune         1.1.2
✔ infer        1.0.5     ✔ workflows    1.1.3
✔ modeldata    1.2.0     ✔ workflowsets 1.0.1
✔ parsnip      1.1.1     ✔ yardstick    1.2.0
✔ recipes      1.0.8     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Search for functions across packages at https://www.tidymodels.org/find/
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> library(bonsai)
> 
> setwd('..')
> source('./scripts/utils.R')
> source('./scripts/feature_engineering.R')
> PARALLEL <- T
> FACTOR_CUTOFF <- 25
> 
> #########################
> ####### Load Data #######
> #########################
> 
> ## Load data
> data <- load_data(factor_cutoff=FACTOR_CUTOFF)
Rows: 61878 Columns: 95
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): target
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 144368 Columns: 94
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
[1] "Changed column feat_5 to factor."
[1] "Changed column feat_6 to factor."
[1] "Changed column feat_12 to factor."
[1] "Changed column feat_21 to factor."
[1] "Changed column feat_22 to factor."
[1] "Changed column feat_23 to factor."
[1] "Changed column feat_28 to factor."
[1] "Changed column feat_33 to factor."
[1] "Changed column feat_37 to factor."
[1] "Changed column feat_51 to factor."
[1] "Changed column feat_61 to factor."
[1] "Changed column feat_65 to factor."
[1] "Changed column feat_77 to factor."
[1] "Changed column feat_79 to factor."
[1] "Changed column feat_81 to factor."
[1] "Changed column feat_82 to factor."
[1] "Changed column feat_92 to factor."
[1] "Changed column target to factor."
> train <- data$train
> test <- data$test
> 
> #########################
> ## Feature Engineering ##
> #########################
> 
> set.seed(2003)
> 
> ## parallel tune grid
> 
> if(PARALLEL){
+   cl <- makePSOCKcluster(10)
+   registerDoParallel(cl)
+ }
> 
> ## Set up preprocessing
> prepped_recipe <- setup_train_recipe(train, encode=F, poly=F, smote_K=0, pca_threshold=0)
> 
> ## Bake recipe
> bake(prepped_recipe, new_data=train)
# A tibble: 61,878 × 95
      id feat_1 feat_2 feat_3  feat_4 feat_5 feat_6 feat_7 feat_8 feat_9 feat_10
   <dbl>  <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>   <dbl>  <dbl>  <dbl>   <dbl>
 1 -1.73  0.402 -0.210 -0.307 -0.279  0      0      -0.188 -0.294 -0.291  -0.244
 2 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188  0.150 -0.291  -0.244
 3 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188  0.150 -0.291  -0.244
 4 -1.73  0.402 -0.210 -0.307  0.0792 6      1       4.67  -0.294 -0.291   0.679
 5 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188 -0.294 -0.291  -0.244
 6 -1.73  1.06   0.589 -0.307 -0.279  7      0      -0.188 -0.294 -0.291  -0.244
 7 -1.73  1.06  -0.210 -0.307 -0.279  0      0      -0.188  0.593 -0.291   0.679
 8 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188 -0.294 -0.291  -0.244
 9 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188  1.48  -0.291  -0.244
10 -1.73 -0.254 -0.210 -0.307 -0.279  0      0       0.783 -0.294 -0.291  -0.244
# ℹ 61,868 more rows
# ℹ 84 more variables: feat_11 <dbl>, feat_12 <fct>, feat_13 <dbl>,
#   feat_14 <dbl>, feat_15 <dbl>, feat_16 <dbl>, feat_17 <dbl>, feat_18 <dbl>,
#   feat_19 <dbl>, feat_20 <dbl>, feat_21 <fct>, feat_22 <fct>, feat_23 <fct>,
#   feat_24 <dbl>, feat_25 <dbl>, feat_26 <dbl>, feat_27 <dbl>, feat_28 <fct>,
#   feat_29 <dbl>, feat_30 <dbl>, feat_31 <dbl>, feat_32 <dbl>, feat_33 <fct>,
#   feat_34 <dbl>, feat_35 <dbl>, feat_36 <dbl>, feat_37 <fct>, …
> bake(prepped_recipe, new_data=test)
# A tibble: 144,368 × 94
      id feat_1 feat_2 feat_3  feat_4 feat_5 feat_6 feat_7 feat_8 feat_9 feat_10
   <dbl>  <dbl>  <dbl>  <dbl>   <dbl> <fct>  <fct>   <dbl>  <dbl>  <dbl>   <dbl>
 1 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188 -0.294 -0.291   2.53 
 2 -1.73  1.06   1.39   4.46   5.46   0      0      -0.188 -0.294 -0.291  -0.244
 3 -1.73 -0.254  0.589  3.78   0.0792 0      0      -0.188 -0.294 -0.291  -0.244
 4 -1.73 -0.254 -0.210 -0.307  0.0792 0      0      -0.188 -0.294 -0.291  -0.244
 5 -1.73  0.402 -0.210 -0.307  0.0792 0      0       0.783  0.593 -0.291   2.53 
 6 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188 -0.294  4.60   -0.244
 7 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188 -0.294 -0.291   4.37 
 8 -1.73  1.06  -0.210 -0.307 -0.279  0      0      -0.188 -0.294 -0.291  -0.244
 9 -1.73 -0.254 -0.210 -0.307 -0.279  1      0      -0.188 -0.294 -0.291  -0.244
10 -1.73 -0.254 -0.210 -0.307 -0.279  0      0      -0.188 -0.294  2.59   -0.244
# ℹ 144,358 more rows
# ℹ 83 more variables: feat_11 <dbl>, feat_12 <fct>, feat_13 <dbl>,
#   feat_14 <dbl>, feat_15 <dbl>, feat_16 <dbl>, feat_17 <dbl>, feat_18 <dbl>,
#   feat_19 <dbl>, feat_20 <dbl>, feat_21 <fct>, feat_22 <fct>, feat_23 <fct>,
#   feat_24 <dbl>, feat_25 <dbl>, feat_26 <dbl>, feat_27 <dbl>, feat_28 <fct>,
#   feat_29 <dbl>, feat_30 <dbl>, feat_31 <dbl>, feat_32 <dbl>, feat_33 <fct>,
#   feat_34 <dbl>, feat_35 <dbl>, feat_36 <dbl>, feat_37 <fct>, …
> 
> #########################
> ## Fit Classifier Model #
> #########################
> 
> boost_model <- boost_tree(
+   trees = tune(),
+   tree_depth = tune(),
+   learn_rate = 0.1,#tune(),
+   mtry = tune(),
+   min_n = 2, #tune(),
+   loss_reduction = 0 #tune(),
+   ) %>%
+   set_engine("lightgbm") %>%
+   set_mode("classification")
> 
> ## Define workflow
> # Transform response to get different cutoff
> boost_wf <- workflow(prepped_recipe) %>%
+   add_model(boost_model)
> 
> # ## Grid of values to tune over
> tuning_grid <- grid_regular(
+   trees(),
+   tree_depth(),
+ #   learn_rate(),
+   mtry(range=c(3,20)),
+ #   min_n(),
+ #   loss_reduction(),
+   levels = 4)
> 
> ## Split data for CV
> folds <- vfold_cv(train, v = 4, repeats=1)
> 
> # Run the CV
> cv_results <- boost_wf %>%
+   tune_grid(resamples=folds,
+             grid=tuning_grid,
+             metrics=metric_set(mn_log_loss))
Error in unserialize(socklist[[n]]) : error reading from connection
Calls: %>% ... recvOneData -> recvOneData.SOCKcluster -> unserialize
Execution halted
