
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #########################
> ### Imports and setup ###
> #########################
> 
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ rsample      1.2.0
✔ dials        1.2.0     ✔ tune         1.1.2
✔ infer        1.0.5     ✔ workflows    1.1.3
✔ modeldata    1.2.0     ✔ workflowsets 1.0.1
✔ parsnip      1.1.1     ✔ yardstick    1.2.0
✔ recipes      1.0.8     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Search for functions across packages at https://www.tidymodels.org/find/
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> library(discrim)

Attaching package: ‘discrim’

The following object is masked from ‘package:dials’:

    smoothness

> 
> setwd('..')
> source('./scripts/utils.R')
> source('./scripts/feature_engineering.R')
> PARALLEL <- T
> FACTOR_CUTOFF <- 25
> 
> #########################
> ####### Load Data #######
> #########################
> 
> ## Load data
> data <- load_data(factor_cutoff=0)#FACTOR_CUTOFF)
Rows: 61878 Columns: 95
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): target
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 144368 Columns: 94
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> train <- data$train
> test <- data$test
> 
> #########################
> ## Feature Engineering ##
> #########################
> 
> set.seed(2003)
> 
> ## parallel tune grid
> 
> if(PARALLEL){
+   cl <- makePSOCKcluster(8)
+   registerDoParallel(cl)
+ }
> 
> ## Set up preprocessing
> prepped_recipe <- setup_train_recipe(train, encode=F, poly=F, smote_K=0, pca_threshold=0.85) #TODO: ENCODE! 
> 
> ## Bake recipe
> bake(prepped_recipe, new_data=train)
# A tibble: 61,878 × 58
   target    PC01    PC02    PC03    PC04    PC05    PC06      PC07     PC08
   <fct>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>     <dbl>    <dbl>
 1 Class_1 -0.539  0.191  -0.0391  2.09   -1.30    -1.18    0.748    0.844  
 2 Class_1 -1.84  -0.456  -0.983   0.0178 -0.401   -0.499  -0.258   -0.00504
 3 Class_1 -1.76  -0.0510 -0.333   0.246   0.0507  -0.568  -0.403    0.0375 
 4 Class_1  5.66   4.98    0.148   3.04   17.2    -17.5   -16.9     -1.41   
 5 Class_1 -1.41   0.410  -0.276   0.931  -0.0785  -0.551  -0.751    0.179  
 6 Class_1  1.56   3.27    1.14    2.10    3.48    -3.09   -4.78     0.432  
 7 Class_1 -1.18   0.528   0.160   0.811   0.601   -0.905  -1.05     0.311  
 8 Class_1 -1.83  -0.649  -0.370   0.204  -0.487   -0.521   0.0243   0.238  
 9 Class_1 -0.187  1.65   -0.198   1.46    0.262    0.946   0.0220   0.114  
10 Class_1 -1.08   0.371  -0.772  -0.141  -0.0206  -0.450   0.00371  0.223  
# ℹ 61,868 more rows
# ℹ 49 more variables: PC09 <dbl>, PC10 <dbl>, PC11 <dbl>, PC12 <dbl>,
#   PC13 <dbl>, PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>,
#   PC19 <dbl>, PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>,
#   PC25 <dbl>, PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>,
#   PC31 <dbl>, PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>,
#   PC37 <dbl>, PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, …
> bake(prepped_recipe, new_data=test)
# A tibble: 144,368 × 57
     PC01   PC02    PC03    PC04   PC05   PC06    PC07   PC08    PC09    PC10
    <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>   <dbl>
 1 -2.35   0.380  1.82   -2.96    1.14  -0.171  1.15    3.06   0.364  -1.01  
 2  5.81  -4.19   1.57   -0.288   0.863 -0.799  0.282   0.466  1.64   -0.452 
 3  5.08  -4.97   0.249  -0.540   0.539  0.482  0.467  -0.301  0.203  -0.717 
 4 -0.959  0.264  4.14   -1.93   -0.488 -0.152 -0.815  -4.61  -0.476  -0.316 
 5 -0.669  1.72  -2.08   -0.0368  0.750  0.458 -1.40   -0.145  0.223   0.173 
 6 -2.24   0.939 -1.46    0.158   3.61  -1.19   3.74   -0.662  1.24   -1.65  
 7  1.73   1.22   0.418  -2.77   -1.24  -1.15  -0.649   0.143 -0.976  -0.0551
 8 -2.47  -0.237  0.516  -0.689   0.156  0.545  0.0643  1.39   0.841   0.237 
 9 -2.42  -0.458  0.0490 -0.828   0.384 -0.666 -0.612   1.06   0.545   0.0619
10 -2.18  -0.221 -1.35    0.478   0.954 -1.06   1.02   -0.681  0.0623 -1.15  
# ℹ 144,358 more rows
# ℹ 47 more variables: PC11 <dbl>, PC12 <dbl>, PC13 <dbl>, PC14 <dbl>,
#   PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, PC19 <dbl>, PC20 <dbl>,
#   PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, PC25 <dbl>, PC26 <dbl>,
#   PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, PC31 <dbl>, PC32 <dbl>,
#   PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, PC37 <dbl>, PC38 <dbl>,
#   PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, PC43 <dbl>, PC44 <dbl>, …
> 
> #########################
> ## Fit Classifier Model #
> #########################
> 
> ## Define model
> bayes_model <- naive_Bayes(
+   Laplace=tune(),
+   smoothness=tune()) %>%
+   set_engine("naivebayes") %>%
+   set_mode("classification")
> 
> ## Define workflow
> bayes_wf <- workflow() %>%
+   add_recipe(prepped_recipe) %>%
+   add_model(bayes_model)
> 
> ## Grid of values to tune over
> tuning_grid <- grid_regular(
+   Laplace(),
+   smoothness(),
+   levels = 5)
> 
> ## Split data for CV
> folds <- vfold_cv(train, v = 5, repeats=1)
> 
> ## Run the CV
> cv_results <- bayes_wf %>%
+   tune_grid(resamples=folds,
+             grid=tuning_grid,
+             metrics=metric_set(mn_log_loss))
> 
> ## Find optimal tuning params
> best_params <- cv_results %>%
+   select_best("mn_log_loss")
> 
> print(best_params)
# A tibble: 1 × 3
  smoothness Laplace .config              
       <dbl>   <dbl> <chr>                
1       0.75       0 Preprocessor1_Model06
> 
> ## Fit workflow
> final_wf <- bayes_wf %>%
+   finalize_workflow(best_params) %>%
+   fit(data = train)
> 
> ## Predict new y
> output <- predict(final_wf, new_data=test, type='prob') %>%
+   bind_cols(test$id,.) %>%
+   rename(
+     id=...1,
+     Class_1=.pred_Class_1,
+     Class_2=.pred_Class_2,
+     Class_3=.pred_Class_3,
+     Class_4=.pred_Class_4,
+     Class_5=.pred_Class_5,
+     Class_6=.pred_Class_6,
+     Class_7=.pred_Class_7,
+     Class_8=.pred_Class_8,
+     Class_9=.pred_Class_9)
New names:
• `` -> `...1`
> 
> #LS: penalty, then mixture
> vroom::vroom_write(output,'./outputs/naive_bayes_preds.csv',delim=',')
> 
> if(PARALLEL){
+   stopCluster(cl)
+ }
> 
> proc.time()
   user  system elapsed 
 35.344   4.422  86.845 
