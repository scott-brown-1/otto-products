
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #########################
> ### Imports and setup ###
> #########################
> 
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ rsample      1.2.0
✔ dials        1.2.0     ✔ tune         1.1.2
✔ infer        1.0.5     ✔ workflows    1.1.3
✔ modeldata    1.2.0     ✔ workflowsets 1.0.1
✔ parsnip      1.1.1     ✔ yardstick    1.2.0
✔ recipes      1.0.8     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Use suppressPackageStartupMessages() to eliminate package startup messages
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> library(discrim)

Attaching package: ‘discrim’

The following object is masked from ‘package:dials’:

    smoothness

> 
> setwd('..')
> source('./scripts/utils.R')
> source('./scripts/feature_engineering.R')
> PARALLEL <- F
> FACTOR_CUTOFF <- 26
> 
> #########################
> ####### Load Data #######
> #########################
> 
> ## Load data
> data <- load_data(factor_cutoff=FACTOR_CUTOFF)
Rows: 61878 Columns: 95
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): target
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
Rows: 144368 Columns: 94
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (94): id, feat_1, feat_2, feat_3, feat_4, feat_5, feat_6, feat_7, feat_8...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
[1] "Drop "
[1] "Changed column feat_5 to factor."
[1] "Changed column feat_6 to factor."
[1] "Changed column feat_10 to factor."
[1] "Changed column feat_12 to factor."
[1] "Changed column feat_21 to factor."
[1] "Changed column feat_22 to factor."
[1] "Changed column feat_23 to factor."
[1] "Changed column feat_28 to factor."
[1] "Changed column feat_33 to factor."
[1] "Changed column feat_37 to factor."
[1] "Changed column feat_44 to factor."
[1] "Changed column feat_51 to factor."
[1] "Changed column feat_55 to factor."
[1] "Changed column feat_61 to factor."
[1] "Changed column feat_65 to factor."
[1] "Changed column feat_77 to factor."
[1] "Changed column feat_79 to factor."
[1] "Changed column feat_81 to factor."
[1] "Changed column feat_82 to factor."
[1] "Changed column feat_92 to factor."
[1] "Changed column target to factor."
> train <- data$train
> test <- data$test
> 
> #########################
> ## Feature Engineering ##
> #########################
> 
> set.seed(2003)
> 
> ## parallel tune grid
> 
> if(PARALLEL){
+   cl <- makePSOCKcluster(8)
+   registerDoParallel(cl)
+ }
> 
> ## Set up preprocessing
> prepped_recipe <- setup_train_recipe(train, encode=T, poly=F, smote_K=5, pca_threshold=0.85)
Warning message:
Column(s) have zero variance so scaling cannot be used: `feat_5_new`, `feat_6_new`, `feat_10_new`, `feat_12_new`, `feat_21_new`, `feat_22_new`, `feat_23_new`, `feat_28_new`, `feat_33_new`, `feat_37_new`, `feat_44_new`, `feat_51_new`, `feat_55_new`, `feat_61_new`, `feat_65_new`, `feat_77_new`, `feat_79_new`, `feat_81_new`, `feat_82_new` and `feat_92_new`. Consider using `step_zv()` to remove those columns before normalizing 
> 
> ## Bake recipe
> bake(prepped_recipe, new_data=train)
# A tibble: 61,878 × 88
   target    PC01    PC02   PC03    PC04   PC05     PC06    PC07    PC08    PC09
   <fct>    <dbl>   <dbl>  <dbl>   <dbl>  <dbl>    <dbl>   <dbl>   <dbl>   <dbl>
 1 Class_1 -0.181 -0.117   0.601 -0.655  -0.263  1.09    -0.617  -0.604   0.0372
 2 Class_1 -1.55   0.954   0.871 -0.103  -0.882  0.0512   0.386  -0.195  -0.132 
 3 Class_1 -1.01   0.669   1.07  -0.340  -0.129  0.0105   0.0979 -1.06   -0.286 
 4 Class_1 25.6   30.7    -3.55   2.83    2.36   1.17     0.930  -0.110   1.75  
 5 Class_1 -0.418  0.0423  1.54  -1.37    0.302  0.0427   0.695  -1.54   -2.38  
 6 Class_1  4.30   1.60    1.63  -3.11    0.810  0.461    0.875  -1.79   -2.52  
 7 Class_1  0.163  0.561   0.756 -0.637   0.585  0.418    0.619   0.0249 -0.570 
 8 Class_1 -1.63   0.867   0.496 -0.0692 -0.161  0.00173  0.103  -0.207  -0.273 
 9 Class_1  0.950 -0.709   1.60  -1.82   -0.473  1.44     0.456   0.0287 -0.129 
10 Class_1 -0.557  0.243   1.14  -0.144  -0.672 -0.230    0.0274 -0.161  -0.292 
# ℹ 61,868 more rows
# ℹ 78 more variables: PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, PC13 <dbl>,
#   PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, PC19 <dbl>,
#   PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, PC25 <dbl>,
#   PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, PC31 <dbl>,
#   PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, PC37 <dbl>,
#   PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, PC43 <dbl>, …
> bake(prepped_recipe, new_data=test)
# A tibble: 144,368 × 87
      PC01   PC02   PC03     PC04    PC05    PC06    PC07    PC08    PC09
     <dbl>  <dbl>  <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>
 1 -1.06    0.318  0.730 -0.274    2.83   -3.98   -0.930  -1.40   -0.596 
 2  2.61   -1.96  -5.87   1.75    -0.813   3.11    0.132  -0.466  -2.08  
 3  1.43   -2.08  -5.81   2.08    -1.81    2.12   -1.34   -0.914  -0.346 
 4 -0.0506 -0.630 -0.893 -0.493    3.62   -0.667   0.972   1.74    3.25  
 5  0.971   1.08   2.28  -0.888   -1.72   -0.651   0.243   0.198   0.0435
 6 -0.626   1.36   1.96  -0.416   -0.554  -0.644  -1.84   -0.690  -1.46  
 7  1.67   -1.80  -0.629  0.741   -0.0915 -2.46    1.53   -0.156   0.872 
 8 -1.72    0.876  0.910 -0.0659   0.894  -0.502  -0.468   0.368  -0.723 
 9 -1.83    0.969  0.591  0.00665  0.563  -1.01   -0.0546 -0.0871 -0.105 
10 -1.62    1.13   1.13  -0.161   -0.824  -0.0548 -0.514  -0.575  -0.609 
# ℹ 144,358 more rows
# ℹ 78 more variables: PC10 <dbl>, PC11 <dbl>, PC12 <dbl>, PC13 <dbl>,
#   PC14 <dbl>, PC15 <dbl>, PC16 <dbl>, PC17 <dbl>, PC18 <dbl>, PC19 <dbl>,
#   PC20 <dbl>, PC21 <dbl>, PC22 <dbl>, PC23 <dbl>, PC24 <dbl>, PC25 <dbl>,
#   PC26 <dbl>, PC27 <dbl>, PC28 <dbl>, PC29 <dbl>, PC30 <dbl>, PC31 <dbl>,
#   PC32 <dbl>, PC33 <dbl>, PC34 <dbl>, PC35 <dbl>, PC36 <dbl>, PC37 <dbl>,
#   PC38 <dbl>, PC39 <dbl>, PC40 <dbl>, PC41 <dbl>, PC42 <dbl>, PC43 <dbl>, …
> 
> #########################
> ## Fit Classifier Model #
> #########################
> 
> ## Define model
> bayes_model <- naive_Bayes(
+   Laplace=0,
+   smoothness=tune()) %>%
+   set_engine("naivebayes") %>%
+   set_mode("classification")
> 
> ## Define workflow
> bayes_wf <- workflow() %>%
+   add_recipe(prepped_recipe) %>%
+   add_model(bayes_model)
> 
> ## Grid of values to tune over
> tuning_grid <- grid_regular(
+   smoothness(),
+   levels = 4)
> 
> ## Split data for CV
> folds <- vfold_cv(train, v = 4, repeats=1)
> 
> ## Run the CV
> cv_results <- bayes_wf %>%
+   tune_grid(resamples=folds,
+             grid=tuning_grid,
+             metrics=metric_set(mn_log_loss))
→ A | warning: Column(s) have zero variance so scaling cannot be used: `feat_5_new`, `feat_6_new`, `feat_10_new`, `feat_12_new`, `feat_21_new`, `feat_22_new`, `feat_23_new`, `feat_28_new`, `feat_33_new`, `feat_37_new`, `feat_44_new`, `feat_51_new`, `feat_55_new`, `feat_61_new`, `feat_65_new`, `feat_77_new`, `feat_79_new`, `feat_81_new`, `feat_82_new` and `feat_92_new`. Consider using `step_zv()` to remove those columns before normalizing
There were issues with some computations   A: x1
There were issues with some computations   A: x2
There were issues with some computations   A: x3
There were issues with some computations   A: x4
There were issues with some computations   A: x4

> 
> ## Find optimal tuning params
> best_params <- cv_results %>%
+   select_best("mn_log_loss")
> 
> print(best_params)
# A tibble: 1 × 2
  smoothness .config             
       <dbl> <chr>               
1      0.833 Preprocessor1_Model2
> 
> ## Fit workflow
> final_wf <- bayes_wf %>%
+   finalize_workflow(best_params) %>%
+   fit(data = train)
Warning message:
Column(s) have zero variance so scaling cannot be used: `feat_5_new`, `feat_6_new`, `feat_10_new`, `feat_12_new`, `feat_21_new`, `feat_22_new`, `feat_23_new`, `feat_28_new`, `feat_33_new`, `feat_37_new`, `feat_44_new`, `feat_51_new`, `feat_55_new`, `feat_61_new`, `feat_65_new`, `feat_77_new`, `feat_79_new`, `feat_81_new`, `feat_82_new` and `feat_92_new`. Consider using `step_zv()` to remove those columns before normalizing 
> 
> ## Predict new y
> output <- predict(final_wf, new_data=test, type='prob') %>%
+   bind_cols(test$id,.) %>%
+   rename(
+     id=...1,
+     Class_1=.pred_Class_1,
+     Class_2=.pred_Class_2,
+     Class_3=.pred_Class_3,
+     Class_4=.pred_Class_4,
+     Class_5=.pred_Class_5,
+     Class_6=.pred_Class_6,
+     Class_7=.pred_Class_7,
+     Class_8=.pred_Class_8,
+     Class_9=.pred_Class_9)
New names:
• `` -> `...1`
There were 40 warnings (use warnings() to see them)
> 
> vroom::vroom_write(output,'./outputs/naive_bayes_preds.csv',delim=',')
> 
> if(PARALLEL){
+   stopCluster(cl)
+ }
> 
> proc.time()
    user   system  elapsed 
2070.089  319.677 2268.277 
